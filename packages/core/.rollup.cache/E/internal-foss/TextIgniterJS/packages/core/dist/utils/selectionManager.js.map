{"version":3,"file":"selectionManager.js","sourceRoot":"","sources":["../../src/utils/selectionManager.ts"],"names":[],"mappings":"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","sourcesContent":["import TextDocument from '../textDocument';\r\nimport EditorView from '../view/editorView';\r\nexport function saveSelection(\r\n  container: HTMLElement\r\n): { start: number; end: number } | null {\r\n  const selection = window.getSelection();\r\n  if (!selection || selection.rangeCount === 0) return null;\r\n  const range = selection.getRangeAt(0);\r\n  const preSelectionRange = range.cloneRange();\r\n  preSelectionRange.selectNodeContents(container);\r\n  preSelectionRange.setEnd(range.startContainer, range.startOffset);\r\n  const start = preSelectionRange.toString().length;\r\n  preSelectionRange.setEnd(range.endContainer, range.endOffset);\r\n  const end = preSelectionRange.toString().length;\r\n  return { start, end };\r\n}\r\n\r\nexport function restoreSelection(\r\n  container: HTMLElement,\r\n  savedSel: { start: number; end: number } | null\r\n): void {\r\n  if (!savedSel) return;\r\n  let charIndex = 0;\r\n  const range = document.createRange();\r\n  range.setStart(container, 0);\r\n  range.collapse(true);\r\n\r\n  const nodeStack: Node[] = [container];\r\n  let node: Node | undefined;\r\n  let foundStart = false;\r\n  let stop = false;\r\n  while (!stop && (node = nodeStack.pop())) {\r\n    if (node.nodeType === 3) {\r\n      const textNode = node as Text;\r\n      const nextCharIndex = charIndex + textNode.length;\r\n      if (\r\n        !foundStart &&\r\n        savedSel.start >= charIndex &&\r\n        savedSel.start <= nextCharIndex\r\n      ) {\r\n        range.setStart(textNode, savedSel.start - charIndex);\r\n        foundStart = true;\r\n      }\r\n      if (\r\n        foundStart &&\r\n        savedSel.end >= charIndex &&\r\n        savedSel.end <= nextCharIndex\r\n      ) {\r\n        range.setEnd(textNode, savedSel.end - charIndex);\r\n        stop = true;\r\n      }\r\n      charIndex = nextCharIndex;\r\n    } else if ((node as HTMLElement).tagName === 'BR') {\r\n      if (!foundStart && savedSel.start === charIndex) {\r\n        range.setStartBefore(node);\r\n        foundStart = true;\r\n      }\r\n      if (foundStart && savedSel.end === charIndex) {\r\n        range.setEndBefore(node);\r\n        stop = true;\r\n      }\r\n      charIndex++;\r\n    } else {\r\n      const el = node as HTMLElement;\r\n      let i = el.childNodes.length;\r\n      while (i--) {\r\n        nodeStack.push(el.childNodes[i]);\r\n      }\r\n    }\r\n  }\r\n  const sel = window.getSelection();\r\n  if (!sel) return;\r\n  sel.removeAllRanges();\r\n  sel.addRange(range);\r\n}\r\n\r\nexport function getSelectionRange(editorView: EditorView): [number, number] {\r\n  const sel = saveSelection(editorView.container);\r\n  if (!sel) return [0, 0];\r\n  return [sel.start, sel.end];\r\n}\r\n\r\nexport function extractTextFromDataId(\r\n  dataId: string,\r\n  textDocument: TextDocument\r\n): { remainingText: string; piece: any } {\r\n  const selection = window.getSelection();\r\n  if (!selection || selection.rangeCount === 0) {\r\n    return { remainingText: '', piece: null }; // No valid selection\r\n  }\r\n\r\n  const range = selection.getRangeAt(0); // Get the current range of the cursor\r\n  const cursorNode = range.startContainer; // The node where the cursor is placed\r\n\r\n  // Find the element with the given data-id\r\n  let fText = '';\r\n\r\n  const _block = textDocument.blocks.filter((block: any) => {\r\n    if (block.dataId === dataId) {\r\n      return block;\r\n    }\r\n  });\r\n  const element = document.querySelector(\r\n    `[data-id=\"${dataId}\"]`\r\n  ) as HTMLElement;\r\n  const textPosition = textDocument.getCursorOffsetInParent(\r\n    `[data-id=\"${dataId}\"]`\r\n  );\r\n  console.log(textPosition, 'textPosition:vicky');\r\n  let _piece: any = [];\r\n  let index = 0;\r\n  _block[0].pieces.forEach((obj: any, i: number) => {\r\n    fText += obj.text;\r\n    if (textPosition?.innerText === obj.text) {\r\n      index = i;\r\n      _piece.push(obj);\r\n    }\r\n  });\r\n  if (_block[0].pieces.length > 1) {\r\n    _block[0].pieces.forEach((obj: any, i: number) => {\r\n      if (index < i) {\r\n        _piece.push(obj);\r\n      }\r\n    });\r\n  }\r\n\r\n  if (!element) {\r\n    console.error(`Element with data-id \"${dataId}\" not found.`);\r\n    return { remainingText: '', piece: null }; // No element with the provided data-id\r\n  }\r\n\r\n  // Ensure the cursor is inside the specified element\r\n  if (!element.contains(cursorNode)) {\r\n    console.error(`Cursor is not inside the element with data-id \"${dataId}\".`);\r\n    return { remainingText: '', piece: null }; // Cursor is outside the target element\r\n  }\r\n\r\n  // Get the full text content of the element\r\n  // const fullText = element.textContent || '';\r\n  const fullText = fText;\r\n  // Calculate the offset position of the cursor within the text node\r\n  // const cursorOffset = range.startOffset;\r\n  const cursorOffset = textPosition?.offset;\r\n\r\n  // Extract text from the cursor position to the end\r\n  const remainingText = fullText.slice(cursorOffset);\r\n\r\n  // Update the DOM: Keep only the text before the cursor\r\n  const newContent = fullText.slice(0, cursorOffset);\r\n  element.textContent = newContent; // Update the element content with remaining text\r\n\r\n  return { remainingText: remainingText, piece: _piece }; // Return the extracted text\r\n}\r\n\r\nexport function addBlockAfter(\r\n  data: any[],\r\n  targetDataId: string,\r\n  newBlock: any\r\n): any[] {\r\n  // Find the index of the block with the specified dataId\r\n  const targetIndex = data.findIndex(block => block.dataId === targetDataId);\r\n\r\n  if (targetIndex === -1) {\r\n    console.error(`Block with dataId \"${targetDataId}\" not found.`);\r\n    return data;\r\n  }\r\n\r\n  // Insert the new block after the target index\r\n  const updatedData = [\r\n    ...data.slice(0, targetIndex + 1),\r\n    newBlock,\r\n    ...data.slice(targetIndex + 1),\r\n  ];\r\n\r\n  return updatedData;\r\n}\r\n"]}