{"version":3,"file":"TextIgniter.js","sourceRoot":"","sources":["../src/TextIgniter.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport TextDocument from './textDocument';\r\nimport EditorView from './view/editorView';\r\nimport ToolbarView from './view/toolbarView';\r\nimport HyperlinkHandler from './handlers/hyperlink';\r\nimport Piece from './piece';\r\nimport { saveSelection } from './utils/selectionManager';\r\nimport { parseHtmlToPieces } from './utils/parseHtml';\r\nimport { createEditor } from './config/editorConfig';\r\nimport './styles/text-igniter.css';\r\nimport HtmlToJsonParser from './HtmlToJsonParser';\r\nimport { EditorConfig } from './types/editorConfig';\r\nimport { ImageHandler } from './handlers/image';\r\nimport { strings } from './constants/strings';\r\nimport UndoRedoManager from './handlers/undoRedoManager';\r\n\r\nexport interface CurrentAttributeDTO {\r\n  bold: boolean;\r\n  italic: boolean;\r\n  underline: boolean;\r\n  undo?: boolean;\r\n  redo?: boolean;\r\n  hyperlink?: string | boolean;\r\n  fontFamily?: string;\r\n  fontSize?: string;\r\n  fontColor?: string;\r\n  bgColor?: string;\r\n}\r\n\r\nclass TextIgniter {\r\n  document: TextDocument;\r\n  htmlToJsonParser: HtmlToJsonParser | undefined;\r\n  editorView: EditorView;\r\n  toolbarView: ToolbarView;\r\n  hyperlinkHandler: HyperlinkHandler;\r\n  imageHandler: ImageHandler;\r\n  currentAttributes: CurrentAttributeDTO;\r\n  manualOverride: boolean;\r\n  lastPiece: Piece | null;\r\n  editorContainer: HTMLElement | null;\r\n  toolbarContainer: HTMLElement | null;\r\n  savedSelection: { start: number; end: number } | null = null;\r\n  debounceTimer: NodeJS.Timeout | null = null;\r\n  undoRedoManager: UndoRedoManager;\r\n  constructor(editorId: string, config: EditorConfig) {\r\n    const { mainEditorId, toolbarId } = createEditor(editorId, config);\r\n\r\n    this.editorContainer = document.getElementById(mainEditorId) || null;\r\n    this.toolbarContainer = document.getElementById(toolbarId) || null;\r\n\r\n    if (!this.editorContainer || !this.toolbarContainer) {\r\n      throw new Error('Editor element not found or incorrect element type.');\r\n    }\r\n\r\n    this.document = new TextDocument();\r\n    this.editorView = new EditorView(this.editorContainer, this.document);\r\n    this.toolbarView = new ToolbarView(this.toolbarContainer);\r\n    this.hyperlinkHandler = new HyperlinkHandler(\r\n      this.editorContainer,\r\n      this.editorView,\r\n      this.document\r\n    );\r\n    this.imageHandler = new ImageHandler(this.editorContainer, this.document);\r\n    this.undoRedoManager = new UndoRedoManager(this.document, this.editorView);\r\n    this.editorView.setImageHandler(this.imageHandler);\r\n    this.imageHandler.setEditorView(this.editorView);\r\n    this.document.setEditorView(this.editorView);\r\n    this.document.setUndoRedoManager(this.undoRedoManager);\r\n    this.hyperlinkHandler.setUndoRedoManager(this.undoRedoManager);\r\n    this.currentAttributes = {\r\n      bold: false,\r\n      italic: false,\r\n      underline: false,\r\n      undo: false,\r\n      redo: false,\r\n      hyperlink: false,\r\n    };\r\n    this.manualOverride = false;\r\n    this.lastPiece = null;\r\n    this.toolbarView.on(\r\n      'toolbarAction',\r\n      (action: string, dataId: string[] = []) =>\r\n        this.handleToolbarAction(action, dataId)\r\n    );\r\n    this.document.on('documentChanged', () => this.editorView.render());\r\n    this.editorContainer.addEventListener('keydown', e => {\r\n      this.syncCurrentAttributesWithCursor();\r\n      this.handleKeydown(e as KeyboardEvent);\r\n    });\r\n    this.editorContainer.addEventListener('keyup', () =>\r\n      this.syncCurrentAttributesWithCursor()\r\n    );\r\n    this.editorContainer.addEventListener('blur', () => {\r\n      this.hyperlinkHandler.hideHyperlinkViewButton();\r\n    });\r\n\r\n    document.addEventListener('mouseup', () => {\r\n      this.syncCurrentAttributesWithCursor();\r\n    });\r\n    document.getElementById('fontColor')?.addEventListener('click', e => {\r\n      const fontColorPicker = document.getElementById(\r\n        'fontColorPicker'\r\n      ) as HTMLInputElement;\r\n\r\n      fontColorPicker.style.display = 'inline';\r\n      const colorWrapper = document.getElementById(\r\n        'colorWrapper'\r\n      ) as HTMLElement;\r\n      // Get the button's position (x, y)\r\n      const rect = (e.target as HTMLElement).getBoundingClientRect();\r\n      const x = rect.left + window.scrollX; // Adjust for scrolling\r\n      const y = rect.bottom + window.scrollY; // Position below the button\r\n\r\n      const resetButton = document.getElementById(\r\n        'colorResetFont'\r\n      ) as HTMLElement;\r\n      resetButton.style.display = 'inline-block';\r\n      resetButton.addEventListener('click', () => {\r\n        fontColorPicker.value = '#000000';\r\n        resetButton.style.display = 'none';\r\n      });\r\n      // Position the color picker\r\n      colorWrapper.style.position = 'absolute';\r\n      colorWrapper.style.left = `${x - 2}px`;\r\n      colorWrapper.style.top = `${y - 15}px`;\r\n      colorWrapper.style.display = 'block'; // Show the color picker\r\n\r\n      fontColorPicker.click();\r\n      if (fontColorPicker) {\r\n        fontColorPicker.addEventListener('input', event => {\r\n          const selectedColor = (event.target as HTMLInputElement).value;\r\n          const [start, end] = this.getSelectionRange();\r\n\r\n          if (this.document.dataIds.length > 1) {\r\n            this.document.blocks.forEach((block: any) => {\r\n              if (this.document.dataIds.includes(block.dataId)) {\r\n                this.document.selectedBlockId = block.dataId;\r\n                let countE = 0;\r\n                block.pieces.forEach((obj: any) => {\r\n                  countE += obj.text.length;\r\n                });\r\n                let countS = start - countE;\r\n                this.document.applyFontColor(countS, countE, selectedColor);\r\n              }\r\n            });\r\n          } else {\r\n            if (this.debounceTimer) {\r\n              clearTimeout(this.debounceTimer); // Clear previous timer\r\n            }\r\n            this.debounceTimer = setTimeout(() => {\r\n              this.document.applyFontColor(start, end, selectedColor);\r\n            }, 300);\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    document.getElementById('bgColor')?.addEventListener('click', e => {\r\n      const bgColorPicker = document.getElementById(\r\n        'bgColorPicker'\r\n      ) as HTMLInputElement;\r\n\r\n      bgColorPicker.style.display = 'inline';\r\n      const colorBgWrapper = document.getElementById(\r\n        'colorBgWrapper'\r\n      ) as HTMLElement;\r\n\r\n      // Get the button's position (x, y)\r\n      const rect = (e.target as HTMLElement).getBoundingClientRect();\r\n      const x = rect.left + window.scrollX; // Adjust for scrolling\r\n      const y = rect.bottom + window.scrollY; // Position below the button\r\n\r\n      const resetButton = document.getElementById(\r\n        'colorResetBG'\r\n      ) as HTMLElement;\r\n      resetButton.style.display = 'inline-block';\r\n      resetButton.addEventListener('click', () => {\r\n        bgColorPicker.value = '#ffffff';\r\n        resetButton.style.display = 'none';\r\n        console.log(y, 'resetb');\r\n      });\r\n\r\n      // Position the color picker\r\n      colorBgWrapper.style.position = 'absolute';\r\n      colorBgWrapper.style.left = `${x - 2}px`;\r\n      colorBgWrapper.style.top = `${y - 15}px`;\r\n      colorBgWrapper.style.display = 'block'; // Show the color picker\r\n\r\n      bgColorPicker.click();\r\n      if (bgColorPicker) {\r\n        bgColorPicker.addEventListener('input', event => {\r\n          const selectedColor = (event.target as HTMLInputElement).value;\r\n          const [start, end] = this.getSelectionRange();\r\n\r\n          if (this.document.dataIds.length > 1) {\r\n            this.document.blocks.forEach((block: any) => {\r\n              if (this.document.dataIds.includes(block.dataId)) {\r\n                this.document.selectedBlockId = block.dataId;\r\n                let countE = 0;\r\n                block.pieces.forEach((obj: any) => {\r\n                  countE += obj.text.length;\r\n                });\r\n                let countS = start - countE;\r\n                this.document.applyBgColor(countS, countE, selectedColor);\r\n              }\r\n            });\r\n          } else {\r\n            if (this.debounceTimer) {\r\n              clearTimeout(this.debounceTimer); // Clear previous timer\r\n            }\r\n            this.debounceTimer = setTimeout(() => {\r\n              this.document.applyBgColor(start, end, selectedColor);\r\n            }, 300);\r\n          }\r\n\r\n          // this.document.applyFontColor(start, end, selectedColor);\r\n        });\r\n      }\r\n    });\r\n\r\n    document.getElementById('getHtmlButton')?.addEventListener('click', e => {\r\n      const htmlString = this.document.getHtmlContent();\r\n      console.log('Editor HTML Content:', htmlString);\r\n      this.htmlToJsonParser = new HtmlToJsonParser(htmlString as string);\r\n      const jsonOutput = this.htmlToJsonParser.parse();\r\n\r\n      console.log(\r\n        'htmltoJson',\r\n        JSON.stringify(jsonOutput, null, 2),\r\n        jsonOutput\r\n      );\r\n    });\r\n\r\n    document.getElementById('loadHtmlButton')?.addEventListener('click', e => {\r\n      // const htmlString = this.document.getHtmlContent();\r\n      this.undoRedoManager.saveUndoSnapshot();\r\n      const str = strings.TEST_HTML_CODE;\r\n      this.htmlToJsonParser = new HtmlToJsonParser(str as string);\r\n      console.log(this.htmlToJsonParser, 'this.htmlToJsonParser');\r\n      const jsonOutput = this.htmlToJsonParser.parse();\r\n\r\n      this.document.blocks = jsonOutput;\r\n      this.document.dataIds[0] = jsonOutput[0].dataId;\r\n      this.document.selectedBlockId = 'data-id-1734604240404';\r\n      this.document.emit('documentChanged', this);\r\n      // eslint-disable-next-line no-unused-vars\r\n      const [start, end] = this.getSelectionRange();\r\n      this.document.blocks.forEach((block: any) => {\r\n        if (this.document.dataIds.includes(block.dataId)) {\r\n          this.document.selectedBlockId = block.dataId;\r\n          let countE = 0;\r\n          block.pieces.forEach((obj: any) => {\r\n            countE += obj.text.length;\r\n          });\r\n          let countS = start - countE;\r\n\r\n          this.document.setFontSize(countS, countE, block.fontSize);\r\n        }\r\n      });\r\n      console.log(\r\n        'blocks',\r\n        this.document.blocks,\r\n        this.document.dataIds,\r\n        this.document.currentOffset\r\n      );\r\n      console.log(\r\n        'htmltoJson',\r\n        JSON.stringify(jsonOutput, null, 2),\r\n        jsonOutput\r\n      );\r\n    });\r\n\r\n    document.getElementById('fontFamily')?.addEventListener('change', e => {\r\n      this.undoRedoManager.saveUndoSnapshot();\r\n      const fontFamily = (e.target as HTMLSelectElement).value;\r\n      const [start, end] = this.getSelectionRange();\r\n      if (this.document.dataIds.length > 1) {\r\n        this.document.blocks.forEach((block: any) => {\r\n          if (this.document.dataIds.includes(block.dataId)) {\r\n            this.document.selectedBlockId = block.dataId;\r\n            let countE = 0;\r\n            block.pieces.forEach((obj: any) => {\r\n              countE += obj.text.length;\r\n            });\r\n            let countS = start - countE;\r\n            this.document.setFontFamily(countS, countE, fontFamily);\r\n          }\r\n        });\r\n      } else {\r\n        this.document.setFontFamily(start, end, fontFamily);\r\n      }\r\n    });\r\n\r\n    document.getElementById('fontSize')?.addEventListener('change', e => {\r\n      this.undoRedoManager.saveUndoSnapshot();\r\n      const fontSize = (e.target as HTMLSelectElement).value;\r\n      const [start, end] = this.getSelectionRange();\r\n      if (this.document.dataIds.length > 1) {\r\n        this.document.blocks.forEach((block: any) => {\r\n          if (this.document.dataIds.includes(block.dataId)) {\r\n            this.document.selectedBlockId = block.dataId;\r\n            let countE = 0;\r\n            block.pieces.forEach((obj: any) => {\r\n              countE += obj.text.length;\r\n            });\r\n            let countS = start - countE;\r\n            this.document.setFontSize(countS, countE, fontSize);\r\n          }\r\n        });\r\n      } else {\r\n        this.document.setFontSize(start, end, fontSize);\r\n      }\r\n      // this.document.setFontSize(start, end, fontSize);\r\n    });\r\n\r\n    document.getElementById('alignLeft')?.addEventListener('click', () => {\r\n      this.document.dataIds.forEach(obj =>\r\n        this.document.setAlignment('left', obj)\r\n      );\r\n      // this.document.setAlignment('left', this.document.selectedBlockId);\r\n    });\r\n\r\n    document.getElementById('alignCenter')?.addEventListener('click', () => {\r\n      this.document.dataIds.forEach(obj =>\r\n        this.document.setAlignment('center', obj)\r\n      );\r\n\r\n      // this.document.setAlignment('center', this.document.selectedBlockId);\r\n    });\r\n\r\n    document.getElementById('alignRight')?.addEventListener('click', () => {\r\n      this.document.dataIds.forEach(obj =>\r\n        this.document.setAlignment('right', obj)\r\n      );\r\n      // this.document.setAlignment('right', this.document.selectedBlockId);\r\n    });\r\n\r\n    this.editorContainer.addEventListener('keydown', e => {\r\n      if ((e.ctrlKey || e.metaKey) && !e.altKey) {\r\n        const key = e.key.toLowerCase();\r\n        if (['b', 'i', 'u', 'h'].includes(key)) {\r\n          e.preventDefault();\r\n          let action = 'b';\r\n          switch (key) {\r\n            case 'b':\r\n              action = 'bold';\r\n              break;\r\n            case 'i':\r\n              action = 'italic';\r\n              break;\r\n            case 'u':\r\n              action = 'underline';\r\n              break;\r\n            case 'h':\r\n              action = 'hyperlink';\r\n              break;\r\n\r\n            default:\r\n              break;\r\n          }\r\n          this.handleToolbarAction(action);\r\n        }\r\n\r\n        if (key === 'z') {\r\n          e.preventDefault();\r\n          // const [start, end] = this.getSelectionRange();\r\n          this.undoRedoManager.undo();\r\n          // this.document.undo();\r\n          // if (this.document.undoStack.length > 0)\r\n          // this.setCursorPosition(start - 1);\r\n          // console.log(\"undoStack\", this.document.undoStack)\r\n          // console.log(\"redoStack\", this.document.redoStack)\r\n        } else if (key === 'y') {\r\n          e.preventDefault();\r\n          // const [start, end] = this.getSelectionRange();\r\n          // this.document.redo();\r\n          this.undoRedoManager.redo();\r\n          // if (this.document.redoStack.length > 0)\r\n          // this.setCursorPosition(start + 1);\r\n          // console.log(\"undoStack\", this.document.undoStack)\r\n          // console.log(\"redoStack\", this.document.redoStack)\r\n        }\r\n        if (key === 'a') {\r\n          // e.preventDefault();\r\n          const dataId = this.document.handleCtrlASelection();\r\n          this.document.selectAll = true;\r\n          console.log('Selected text is inside element with data-id:', dataId);\r\n        }\r\n\r\n        if (e.key === 'l') {\r\n          e.preventDefault();\r\n          this.document.setAlignment('left', this.document.selectedBlockId);\r\n        } else if (e.key === 'e') {\r\n          e.preventDefault();\r\n          this.document.setAlignment('center', this.document.selectedBlockId);\r\n        } else if (e.key === 'r') {\r\n          e.preventDefault();\r\n          this.document.setAlignment('right', this.document.selectedBlockId);\r\n        }\r\n        // console.log('undo', this.document.undoStack, 'redo', this.document.redoStack);\r\n      }\r\n    });\r\n\r\n    document.addEventListener(\r\n      'selectionchange',\r\n      this.handleSelectionChange.bind(this)\r\n    );\r\n\r\n    this.document.emit('documentChanged', this.document);\r\n\r\n    this.editorContainer.addEventListener('paste', (e: ClipboardEvent) => {\r\n      this.undoRedoManager.saveUndoSnapshot();\r\n      e.preventDefault();\r\n      const html = e.clipboardData?.getData('text/html');\r\n      const [start, end] = this.getSelectionRange();\r\n      if (end > start) {\r\n        this.document.deleteRange(start, end);\r\n      }\r\n\r\n      let piecesToInsert: Piece[] = [];\r\n      if (html) {\r\n        piecesToInsert = parseHtmlToPieces(html);\r\n      } else {\r\n        const text = e.clipboardData?.getData('text/plain') || '';\r\n        piecesToInsert = [new Piece(text, { ...this.currentAttributes })];\r\n      }\r\n\r\n      let offset = start;\r\n      for (const p of piecesToInsert) {\r\n        this.document.insertAt(\r\n          p.text,\r\n          { ...p.attributes },\r\n          offset,\r\n          this.document.selectedBlockId\r\n        );\r\n        offset += p.text.length;\r\n      }\r\n      this.setCursorPosition(offset);\r\n    });\r\n\r\n    this.editorContainer.addEventListener('dragover', e => {\r\n      e.preventDefault();\r\n    });\r\n\r\n    this.editorContainer.addEventListener('drop', (e: DragEvent) => {\r\n      e.preventDefault();\r\n      const html = e.dataTransfer?.getData('text/html');\r\n      const [start, end] = this.getSelectionRange();\r\n      if (end > start) {\r\n        this.document.deleteRange(start, end);\r\n      }\r\n\r\n      let piecesToInsert: Piece[] = [];\r\n      if (html) {\r\n        piecesToInsert = parseHtmlToPieces(html);\r\n      } else {\r\n        const text = e.dataTransfer?.getData('text/plain') || '';\r\n        piecesToInsert = [new Piece(text, { ...this.currentAttributes })];\r\n      }\r\n\r\n      let offset = start;\r\n      for (const p of piecesToInsert) {\r\n        this.document.insertAt(\r\n          p.text,\r\n          { ...p.attributes },\r\n          offset,\r\n          this.document.selectedBlockId\r\n        );\r\n        offset += p.text.length;\r\n      }\r\n      this.setCursorPosition(offset);\r\n    });\r\n  }\r\n\r\n  getSelectionRange(): [number, number] {\r\n    const sel = saveSelection(this.editorView.container);\r\n    if (!sel) return [0, 0];\r\n    return [sel.start, sel.end];\r\n  }\r\n\r\n  // Function to apply selected color\r\n  applyFontColor(color: string) {\r\n    const selection = window.getSelection();\r\n    if (!selection || selection.rangeCount === 0) return;\r\n\r\n    const range = selection.getRangeAt(0);\r\n    const selectedText = range.toString();\r\n    if (!selectedText) return;\r\n\r\n    // Apply color to pieces\r\n    // this.applyFontColor(selection, color);\r\n  }\r\n\r\n  // Toolbar action handler\r\n  handleToolbarAction(action: string, dataId: string[] = []): void {\r\n    const [start, end] = this.getSelectionRange();\r\n\r\n    switch (action) {\r\n      case 'orderedList':\r\n        // Toggle ordered list for each selected block\r\n        this.document.dataIds.forEach((id: string) => {\r\n          this.document.toggleOrderedList(id);\r\n        });\r\n        // Recalculate numbering for contiguous ordered list blocks\r\n        this.document.updateOrderedListNumbers();\r\n        break;\r\n      case 'unorderedList':\r\n        this.document.dataIds.forEach((id: string) => {\r\n          this.document.toggleUnorderedList(id);\r\n        });\r\n        break;\r\n      case 'image':\r\n        this.imageHandler.insertImage();\r\n        break;\r\n      default:\r\n        if (start < end) {\r\n          this.undoRedoManager.saveUndoSnapshot();\r\n          switch (action) {\r\n            case 'bold':\r\n              if (this.document.dataIds.length > 1) {\r\n                this.document.blocks.forEach((block: any) => {\r\n                  if (this.document.dataIds.includes(block.dataId)) {\r\n                    this.document.selectedBlockId = block.dataId;\r\n                    let countE = 0;\r\n                    block.pieces.forEach((obj: any) => {\r\n                      countE += obj.text.length;\r\n                    });\r\n                    let countS = start - countE;\r\n                    this.document.toggleBoldRange(countS, countE);\r\n                  }\r\n                });\r\n              } else {\r\n                this.document.toggleBoldRange(start, end);\r\n              }\r\n              break;\r\n            case 'italic':\r\n              if (this.document.dataIds.length > 1) {\r\n                this.document.blocks.forEach((block: any) => {\r\n                  if (this.document.dataIds.includes(block.dataId)) {\r\n                    this.document.selectedBlockId = block.dataId;\r\n                    let countE = 0;\r\n                    block.pieces.forEach((obj: any) => {\r\n                      countE += obj.text.length;\r\n                    });\r\n                    let countS = start - countE;\r\n                    this.document.toggleItalicRange(countS, countE);\r\n                  }\r\n                });\r\n              } else {\r\n                this.document.toggleItalicRange(start, end);\r\n              }\r\n              break;\r\n            case 'underline':\r\n              if (this.document.dataIds.length > 1) {\r\n                this.document.blocks.forEach((block: any) => {\r\n                  if (this.document.dataIds.includes(block.dataId)) {\r\n                    this.document.selectedBlockId = block.dataId;\r\n                    let countE = 0;\r\n                    block.pieces.forEach((obj: any) => {\r\n                      countE += obj.text.length;\r\n                    });\r\n                    let countS = start - countE;\r\n                    this.document.toggleUnderlineRange(countS, countE);\r\n                  }\r\n                });\r\n              } else {\r\n                this.document.toggleUnderlineRange(start, end);\r\n              }\r\n              break;\r\n            // case 'undo':\r\n            //   this.document.undo();\r\n            //   break;\r\n            // case 'redo':\r\n            //   this.document.redo();\r\n            //   break;\r\n            case 'hyperlink':\r\n              this.hyperlinkHandler.hanldeHyperlinkClick(\r\n                start,\r\n                end,\r\n                this.document.currentOffset,\r\n                this.document.selectedBlockId,\r\n                this.document.blocks\r\n              );\r\n              break;\r\n          }\r\n        } else {\r\n          this.currentAttributes[\r\n            action as 'bold' | 'italic' | 'underline' | 'undo' | 'redo'\r\n          ] =\r\n            !this.currentAttributes[\r\n            action as 'bold' | 'italic' | 'underline' | 'undo' | 'redo'\r\n            ];\r\n          this.manualOverride = true;\r\n        }\r\n\r\n        break;\r\n    }\r\n    this.toolbarView.updateActiveStates(this.currentAttributes);\r\n  }\r\n\r\n  handleSelectionChange(): void {\r\n    const [start] = this.getSelectionRange();\r\n    this.imageHandler.currentCursorLocation = start;\r\n\r\n    const selection = window.getSelection();\r\n\r\n    if (!selection || selection.rangeCount === 0) {\r\n      // this.document.selectedBlockId = null;\r\n\r\n      return;\r\n    }\r\n    if (selection && selection.isCollapsed === true) {\r\n      this.document.dataIds = [];\r\n      // this.document.selectedBlockId = 'data-id-1734604240404';\r\n      // return;\r\n    }\r\n\r\n    const range = selection.getRangeAt(0);\r\n    const parentBlock =\r\n      range.startContainer.parentElement?.closest('[data-id]') ||\r\n      range.startContainer;\r\n    if (parentBlock instanceof HTMLElement) {\r\n      this.document.selectedBlockId =\r\n        parentBlock.getAttribute('data-id') ||\r\n        (range.startContainer instanceof HTMLElement\r\n          ? range.startContainer.getAttribute('data-id')\r\n          : null);\r\n    }\r\n    this.syncCurrentAttributesWithCursor();\r\n  }\r\n\r\n  // handleKeydown(e: KeyboardEvent): void {\r\n  //     const [start, end] = this.getSelectionRange();\r\n  //     this.imageHandler.currentCursorLocation = start;\r\n  //     let ending = end;\r\n  //     if (e.key === 'Enter') {\r\n  //         console.log('blocks--->>', this.document.blocks)\r\n  //         e.preventDefault();\r\n  //         const uniqueId = `data-id-${Date.now()}`;\r\n  //         if (this.document.blocks[this.document.blocks.length - 1]?.listType === 'ol' || this.document.blocks[this.document.blocks.length - 1]?.listType === 'ul' || this.document.blocks[this.document.blocks.length - 1]?.listType === 'li') {\r\n  //             const ListType2 = this.document.blocks[this.document.blocks.length - 2]?.listType;\r\n  //             const ListType = this.document.blocks[this.document.blocks.length - 1]?.listType;\r\n  //             let parentId = '';\r\n  //             let _start = 1;\r\n  //             let blockListType = ListType;\r\n\r\n  //             if (ListType === 'ol') {\r\n  //                 _start = this.document.blocks[this.document.blocks.length - 1]?.listStart;\r\n  //                 _start += 1;\r\n  //                 blockListType = 'li';\r\n  //                 parentId = this.document.blocks[this.document.blocks.length - 1]?.dataId;\r\n  //             } else if (ListType === 'li') {\r\n  //                 _start = this.document.blocks[this.document.blocks.length - 1]?.listStart;\r\n  //                 _start += 1;\r\n  //                 parentId = this.document.blocks[this.document.blocks.length - 1]?.parentId;\r\n  //             }\r\n  //             //  else if (ListType === 'ol' && ListType2 === null) {\r\n  //             //     blockListType = 'li';\r\n  //             // }\r\n\r\n  //             this.document.blocks.push({\r\n  //                 \"dataId\": uniqueId, \"class\": \"paragraph-block\", \"pieces\": [new Piece(\" \")],\r\n  //                 \"type\": \"text\",\r\n  //                 // listType: ListType, // null | 'ol' | 'ul'\r\n  //                 listType: blockListType,\r\n  //                 parentId: parentId,\r\n  //                 listStart: ListType === 'ol' || ListType === 'li' ? _start : '',\r\n  //             })\r\n  //         } else {\r\n\r\n  //             const currentBlockIndex = this.document.blocks.findIndex((block: any) => block.dataId === this.document.selectedBlockId)\r\n  //             if (this.document.blocks[currentBlockIndex].type === \"image\") {\r\n  //                 this.document.blocks.push({\r\n  //                     \"dataId\": uniqueId, \"class\": \"paragraph-block\", \"pieces\": [new Piece(\" \")],\r\n  //                     \"type\": \"text\"\r\n  //                 });\r\n  //                 this.document.emit('documentChanged', this);\r\n  //                 this.imageHandler.setCursorPostion(1, uniqueId);\r\n  //                 return;\r\n  //             }\r\n  //             if (this.getCurrentCursorBlock() !== null) {\r\n  //                 const { remainingText, piece } = this.extractTextFromDataId(this.getCurrentCursorBlock()!.toString());\r\n  //                 console.log(this.document.blocks, \"this.getCurrentCursorBlock()!.toString()\", this.getCurrentCursorBlock()!.toString(), remainingText, piece)\r\n  //                 const extractedContent = \" \" + remainingText;\r\n  //                 let updatedBlock = this.document.blocks;\r\n  //                 console.log('blocks--->> if', this.getCurrentCursorBlock())\r\n  //                 if (extractedContent.length > 0) {\r\n  //                     const _extractedContent = remainingText.split(' ');\r\n  //                     let _pieces = []\r\n  //                     console.log('blocks--->> if1 piece  ', _extractedContent, piece)\r\n  //                     if (_extractedContent[0] !== '' || _extractedContent[1] !== undefined) {\r\n  //                         if (piece.length === 1) {\r\n  //                             _pieces = [new Piece(extractedContent, piece[0].attributes)]\r\n\r\n  //                             console.log('blocks--->> if2 _extractedContent', _extractedContent, extractedContent, piece[0].attributes)\r\n  //                         } else {\r\n  //                             console.log('blocks--->> else2', _extractedContent, _extractedContent[0] + \" \", piece[0].attributes, piece[0], start, end)\r\n  //                             _pieces.push(new Piece(\" \" + _extractedContent[0] + \" \", piece[0].attributes))\r\n  //                             if (piece.length >= 2) {\r\n  //                                 console.log(\"blocks--->>if 33_pieces.\", _pieces, piece)\r\n  //                                 piece.forEach((obj: any, i: number) => {\r\n  //                                     console.log(\"blocks--->>if foreach\", i, obj)\r\n  //                                     if (i !== 0) {\r\n  //                                         _pieces.push(obj)\r\n  //                                     }\r\n\r\n  //                                 })\r\n  //                                 console.log(\"blocks--->>if 33_pieces..\", _pieces, piece)\r\n  //                             }\r\n  //                         }\r\n\r\n  //                     } else {\r\n\r\n  //                         _pieces = [new Piece(\" \")]\r\n  //                     }\r\n  //                     console.log(\"blocks--->>_pieces:\", _pieces)\r\n  //                     updatedBlock = this.addBlockAfter(this.document.blocks, this.getCurrentCursorBlock()!.toString(), {\r\n  //                         \"dataId\": uniqueId, \"class\": \"paragraph-block\", \"pieces\": _pieces,\r\n  //                         \"type\": \"text\"\r\n  //                         // listType: null, // null | 'ol' | 'ul'\r\n  //                     });\r\n\r\n  //                     ending = start + extractedContent.length - 1;\r\n  //                 } else {\r\n  //                     updatedBlock = this.addBlockAfter(this.document.blocks, this.getCurrentCursorBlock()!.toString(), {\r\n  //                         \"dataId\": uniqueId, \"class\": \"paragraph-block\", \"pieces\": [new Piece(\" \")],\r\n  //                         \"type\": \"text\"\r\n  //                         // listType: null, // null | 'ol' | 'ul'\r\n  //                     });\r\n  //                 }\r\n\r\n  //                 this.document.blocks = updatedBlock\r\n\r\n  //             } else {\r\n\r\n  //                 this.document.blocks.push({\r\n  //                     \"dataId\": uniqueId, \"class\": \"paragraph-block\", \"pieces\": [new Piece(\" \")],\r\n  //                     \"type\": \"text\"\r\n  //                     // listType: null, // null | 'ol' | 'ul'\r\n  //                 })\r\n  //             }\r\n  //         }\r\n\r\n  //         this.syncCurrentAttributesWithCursor();\r\n  //         this.editorView.render()\r\n  //         this.setCursorPosition(ending + 1, uniqueId);\r\n  //         if (ending > start) {\r\n  //             this.document.deleteRange(start, ending, this.document.selectedBlockId, this.document.currentOffset);\r\n\r\n  //         }\r\n\r\n  //     } else if (e.key === 'Backspace') {\r\n  //         e.preventDefault();\r\n  //         if (this.imageHandler.isImageHighlighted) {\r\n  //             const currentBlockIndex = this.document.blocks.findIndex((block: any) => block.dataId === this.imageHandler.highLightedImageDataId);\r\n\r\n  //             this.imageHandler.deleteImage();\r\n  //             this.imageHandler.setCursorPostion(1, this.document.blocks[currentBlockIndex - 1].dataId);\r\n  //             return;\r\n  //         }\r\n  //         const selection = window.getSelection();\r\n  //         console.log(selection, \"selection backspace\", start === end && start > 0)\r\n\r\n  //         if (this.document.dataIds.length >= 1 && this.document.selectAll) {\r\n\r\n  //             // this.document.dataIds.forEach(obj => {\r\n  //             //     this.document.deleteBlocks(obj)\r\n  //             // })\r\n  //             this.document.deleteBlocks();\r\n  //             this.setCursorPosition(start + 1);\r\n  //         }\r\n\r\n  //         if (start === end && start > 0) {\r\n  //             // this.document.dataIds.forEach(obj => this.document.deleteRange(start - 1, start, obj, this.document.currentOffset))\r\n  //             this.document.deleteRange(start - 1, start, this.document.selectedBlockId, this.document.currentOffset);\r\n  //             this.setCursorPosition(start - 1);\r\n  //             const index = this.document.blocks.findIndex((block: any) => block.dataId === this.document.selectedBlockId)\r\n  //             const chkBlock = document.querySelector(`[data-id=\"${this.document.selectedBlockId}\"]`) as HTMLElement\r\n\r\n  //             if (chkBlock === null) {\r\n  //                 // const listType = this.document.blocks[index].listType;\r\n  //                 // let parentId = this.document.blocks[index]?.parentId;\r\n  //                 let listStart = 0;\r\n  //                 const _blocks = this.document.blocks.map((block: any, index: number) => {\r\n  //                     if (block?.listType !== undefined || block?.listType !== null) {\r\n  //                         if (block?.listType === 'ol') {\r\n  //                             listStart = 1;\r\n  //                             block.listStart = 1;\r\n  //                         } else if (block?.listType === 'li') {\r\n  //                             listStart = listStart + 1\r\n  //                             block.listStart = listStart;\r\n  //                         }\r\n  //                     }\r\n  //                     return block;\r\n  //                 });\r\n\r\n  //                 this.document.emit('documentChanged', this);\r\n  //             }\r\n  //         } else if (end > start) {\r\n\r\n  //             // this.document.deleteBlocks();\r\n  //             // this.document.dataIds.forEach(obj => this.document.deleteRange(start, end, obj, this.document.currentOffset))\r\n  //             // this.document.deleteBlocks();\r\n  //             this.document.deleteRange(start, end, this.document.selectedBlockId, this.document.currentOffset);\r\n  //             this.setCursorPosition(start + 1);\r\n\r\n  //         }\r\n  //     } else if (e.key.length === 1 && !e.ctrlKey && !e.metaKey && !e.altKey) {\r\n  //         e.preventDefault();\r\n  //         if (end > start) {\r\n  //             this.document.deleteRange(start, end, this.document.selectedBlockId, this.document.currentOffset);\r\n  //         }\r\n  //         this.document.insertAt(e.key, this.currentAttributes, start, this.document.selectedBlockId, this.document.currentOffset);\r\n  //         this.setCursorPosition(start + 1);\r\n  //     } else if (e.key === \"Delete\") {\r\n  //         e.preventDefault();\r\n  //         if (start === end) { // just a char\r\n  //             // this.document.dataIds.forEach(obj => this.document.deleteRange(start, start + 1, obj))\r\n  //             this.document.deleteRange(start, start + 1, this.document.selectedBlockId);\r\n  //             this.setCursorPosition(start);\r\n  //         } else if (end > start) { //Selection\r\n  //             // this.document.dataIds.forEach(obj => this.document.deleteRange(start, end, obj))\r\n  //             this.document.deleteRange(start, end, this.document.selectedBlockId);\r\n  //             this.setCursorPosition(start);\r\n  //         }\r\n  //     }\r\n\r\n  //     this.hyperlinkHandler.hideHyperlinkViewButton();\r\n  // }\r\n\r\n  handleKeydown(e: KeyboardEvent): void {\r\n    const [start, end] = this.getSelectionRange();\r\n    this.imageHandler.currentCursorLocation = start;\r\n    let ending = end;\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      const uniqueId = `data-id-${Date.now()}`;\r\n\r\n      // Get the current selected block\r\n      const currentBlockIndex = this.document.blocks.findIndex(\r\n        (block: any) => block.dataId === this.document.selectedBlockId\r\n      );\r\n      const currentBlock = this.document.blocks[currentBlockIndex];\r\n\r\n      // If current block is an image, simply add a new text block after it\r\n      if (currentBlock && currentBlock.type === 'image') {\r\n        this.document.blocks.splice(currentBlockIndex + 1, 0, {\r\n          dataId: uniqueId,\r\n          class: 'paragraph-block',\r\n          pieces: [new Piece(' ')],\r\n          type: 'text',\r\n        });\r\n        this.document.emit('documentChanged', this);\r\n        console.log('image - vicky', uniqueId);\r\n        this.imageHandler.setCursorPostion(1, uniqueId);\r\n      }\r\n      // If current block is a list block, continue the list sequence even if an image block exists later\r\n      else if (\r\n        currentBlock &&\r\n        (currentBlock.listType === 'ol' ||\r\n          currentBlock.listType === 'ul' ||\r\n          currentBlock.listType === 'li')\r\n      ) {\r\n        let newBlock: any = {\r\n          dataId: uniqueId,\r\n          class: 'paragraph-block',\r\n          pieces: [new Piece(' ')],\r\n          type: 'text',\r\n        };\r\n        let listParentId = '';\r\n        if (currentBlock.listType === 'ol') {\r\n          newBlock.listType = 'li';\r\n          newBlock.listStart = currentBlock.listStart + 1;\r\n          newBlock.parentId = currentBlock.dataId;\r\n          listParentId = currentBlock.dataId;\r\n        } else if (currentBlock.listType === 'li') {\r\n          newBlock.listType = 'li';\r\n          newBlock.listStart = currentBlock.listStart + 1;\r\n          newBlock.parentId = currentBlock.parentId;\r\n          listParentId = currentBlock.parentId;\r\n        } else if (currentBlock.listType === 'ul') {\r\n          newBlock.listType = 'ul';\r\n          newBlock.parentId = currentBlock.parentId || currentBlock.dataId;\r\n        }\r\n        // Insert newBlock right after the current block\r\n        this.document.blocks.splice(currentBlockIndex + 1, 0, newBlock);\r\n\r\n        // For ordered lists, update subsequent list items to increment their listStart\r\n        if (currentBlock.listType === 'ol' || currentBlock.listType === 'li') {\r\n          for (\r\n            let i = currentBlockIndex + 2;\r\n            i < this.document.blocks.length;\r\n            i++\r\n          ) {\r\n            const block = this.document.blocks[i];\r\n            if (block.listType === 'li' && block.parentId === listParentId) {\r\n              block.listStart += 1;\r\n            } else {\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        // Normal text block insertion (with text splitting logic if applicable)\r\n        if (this.getCurrentCursorBlock() !== null) {\r\n          const { remainingText, piece } = this.extractTextFromDataId(\r\n            this.getCurrentCursorBlock()!.toString()\r\n          );\r\n          const extractedContent = ' ' + remainingText;\r\n          let updatedBlock = this.document.blocks;\r\n          if (extractedContent.length > 0) {\r\n            const _extractedContent = remainingText.split(' ');\r\n            let _pieces: Piece[] = [];\r\n            if (\r\n              _extractedContent[0] !== '' ||\r\n              _extractedContent[1] !== undefined\r\n            ) {\r\n              if (piece.length === 1) {\r\n                _pieces = [new Piece(extractedContent, piece[0].attributes)];\r\n              } else {\r\n                _pieces.push(\r\n                  new Piece(\r\n                    ' ' + _extractedContent[0] + ' ',\r\n                    piece[0].attributes\r\n                  )\r\n                );\r\n                if (piece.length >= 2) {\r\n                  piece.forEach((obj: any, i: number) => {\r\n                    if (i !== 0) {\r\n                      _pieces.push(obj);\r\n                    }\r\n                  });\r\n                }\r\n              }\r\n            } else {\r\n              _pieces = [new Piece(' ')];\r\n            }\r\n            updatedBlock = this.addBlockAfter(\r\n              this.document.blocks,\r\n              this.getCurrentCursorBlock()!.toString(),\r\n              {\r\n                dataId: uniqueId,\r\n                class: 'paragraph-block',\r\n                pieces: _pieces,\r\n                type: 'text',\r\n              }\r\n            );\r\n            ending = start + extractedContent.length - 1;\r\n          } else {\r\n            updatedBlock = this.addBlockAfter(\r\n              this.document.blocks,\r\n              this.getCurrentCursorBlock()!.toString(),\r\n              {\r\n                dataId: uniqueId,\r\n                class: 'paragraph-block',\r\n                pieces: [new Piece(' ')],\r\n                type: 'text',\r\n              }\r\n            );\r\n          }\r\n          this.document.blocks = updatedBlock;\r\n        } else {\r\n          this.document.blocks.push({\r\n            dataId: uniqueId,\r\n            class: 'paragraph-block',\r\n            pieces: [new Piece(' ')],\r\n            type: 'text',\r\n          });\r\n        }\r\n      }\r\n      this.syncCurrentAttributesWithCursor();\r\n      this.editorView.render();\r\n      this.setCursorPosition(ending + 1, uniqueId);\r\n      if (ending > start) {\r\n        this.document.deleteRange(\r\n          start,\r\n          ending,\r\n          this.document.selectedBlockId,\r\n          this.document.currentOffset\r\n        );\r\n      }\r\n\r\n      // Insert entry in undo stack\r\n      //   if (e.isTrusted) {\r\n      //     const _redoStackIds = this.document.redoStack.filter(obj => obj.id === \"\")\r\n      //     if (_redoStackIds.length === 0) {\r\n      //         this.document.undoStack.push({\r\n      //             id: Date.now().toString(),\r\n      //             start: 0,\r\n      //             end: 0 ,\r\n      //             action: 'enter',\r\n      //             previousValue:\"\",\r\n      //             newValue:'enter'\r\n      //         });\r\n\r\n      //         // Clear redo stack\r\n      //         this.document.redoStack = [];\r\n      //     }\r\n      // }\r\n    } else if (e.key === 'Backspace') {\r\n      e.preventDefault();\r\n      if (this.imageHandler.isImageHighlighted) {\r\n        const currentBlockIndex = this.document.blocks.findIndex(\r\n          (block: any) =>\r\n            block.dataId === this.imageHandler.highLightedImageDataId\r\n        );\r\n        this.imageHandler.deleteImage();\r\n        this.imageHandler.setCursorPostion(\r\n          1,\r\n          this.document.blocks[currentBlockIndex - 1].dataId\r\n        );\r\n        return;\r\n      }\r\n      const selection = window.getSelection();\r\n      if (this.document.dataIds.length >= 1 && this.document.selectAll) {\r\n        this.document.deleteBlocks();\r\n        this.setCursorPosition(start + 1);\r\n      }\r\n      if (start === end && start > 0) {\r\n        this.document.deleteRange(\r\n          start - 1,\r\n          start,\r\n          this.document.selectedBlockId,\r\n          this.document.currentOffset\r\n        );\r\n        this.setCursorPosition(start - 1);\r\n        const index = this.document.blocks.findIndex(\r\n          (block: any) => block.dataId === this.document.selectedBlockId\r\n        );\r\n        const chkBlock = document.querySelector(\r\n          `[data-id=\"${this.document.selectedBlockId}\"]`\r\n        ) as HTMLElement;\r\n        if (chkBlock === null) {\r\n          let listStart = 0;\r\n          const _blocks = this.document.blocks.map(\r\n            (block: any, index: number) => {\r\n              if (block?.listType !== undefined || block?.listType !== null) {\r\n                if (block?.listType === 'ol') {\r\n                  listStart = 1;\r\n                  block.listStart = 1;\r\n                } else if (block?.listType === 'li') {\r\n                  listStart = listStart + 1;\r\n                  block.listStart = listStart;\r\n                }\r\n              }\r\n              return block;\r\n            }\r\n          );\r\n          this.document.emit('documentChanged', this);\r\n        }\r\n      } else if (end > start) {\r\n        this.document.deleteRange(\r\n          start,\r\n          end,\r\n          this.document.selectedBlockId,\r\n          this.document.currentOffset\r\n        );\r\n        this.setCursorPosition(start + 1);\r\n      }\r\n    } else if (e.key.length === 1 && !e.ctrlKey && !e.metaKey && !e.altKey) {\r\n      e.preventDefault();\r\n      if (end > start) {\r\n        this.document.deleteRange(\r\n          start,\r\n          end,\r\n          this.document.selectedBlockId,\r\n          this.document.currentOffset\r\n        );\r\n      }\r\n      console.log(\r\n        'insertat',\r\n        e.key,\r\n        this.currentAttributes,\r\n        start,\r\n        this.document.selectedBlockId,\r\n        this.document.currentOffset,\r\n        '',\r\n        '',\r\n        !e.isTrusted || false\r\n      );\r\n      this.document.insertAt(\r\n        e.key,\r\n        this.currentAttributes,\r\n        start,\r\n        this.document.selectedBlockId,\r\n        this.document.currentOffset,\r\n        '',\r\n        '',\r\n        !e.isTrusted || false\r\n      );\r\n      this.setCursorPosition(start + 1);\r\n    } else if (e.key === 'Delete') {\r\n      e.preventDefault();\r\n      if (start === end) {\r\n        this.document.deleteRange(\r\n          start,\r\n          start + 1,\r\n          this.document.selectedBlockId\r\n        );\r\n        this.setCursorPosition(start);\r\n      } else if (end > start) {\r\n        this.document.deleteRange(start, end, this.document.selectedBlockId);\r\n        this.setCursorPosition(start);\r\n      }\r\n    }\r\n    this.hyperlinkHandler.hideHyperlinkViewButton();\r\n  }\r\n\r\n  extractTextFromDataId(dataId: string): { remainingText: string; piece: any } {\r\n    const selection = window.getSelection();\r\n    console.log('selection::', selection);\r\n    if (!selection || selection.rangeCount === 0) {\r\n      return { remainingText: '', piece: null }; // No valid selection\r\n    }\r\n\r\n    const range = selection.getRangeAt(0); // Get the current range of the cursor\r\n    const cursorNode = range.startContainer; // The node where the cursor is placed\r\n\r\n    // Find the element with the given data-id\r\n    let fText = '';\r\n\r\n    let count = 0;\r\n    const _block = this.document.blocks.filter((block: any) => {\r\n      if (block.dataId === dataId) {\r\n        return block;\r\n      }\r\n    });\r\n    const element = document.querySelector(\r\n      `[data-id=\"${dataId}\"]`\r\n    ) as HTMLElement;\r\n    const textPosition = this.document.getCursorOffsetInParent(\r\n      `[data-id=\"${dataId}\"]`\r\n    );\r\n    let _piece: any = [];\r\n    let index = 0;\r\n    _block[0].pieces.forEach((obj: any, i: number) => {\r\n      fText += obj.text;\r\n      if (textPosition?.innerText === obj.text) {\r\n        index = i;\r\n        _piece.push(obj);\r\n      }\r\n    });\r\n    if (_block[0].pieces.length > 1) {\r\n      _block[0].pieces.forEach((obj: any, i: number) => {\r\n        if (index < i) {\r\n          _piece.push(obj);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (!element) {\r\n      console.error(`Element with data-id \"${dataId}\" not found.`);\r\n      return { remainingText: '', piece: null }; // No element with the provided data-id\r\n    }\r\n\r\n    // Ensure the cursor is inside the specified element\r\n    if (!element.contains(cursorNode)) {\r\n      console.error(\r\n        `Cursor is not inside the element with data-id \"${dataId}\".`\r\n      );\r\n      return { remainingText: '', piece: null }; // Cursor is outside the target element\r\n    }\r\n\r\n    // Get the full text content of the element\r\n    // const fullText = element.textContent || '';\r\n    const fullText = fText;\r\n    // Calculate the offset position of the cursor within the text node\r\n    // const cursorOffset = range.startOffset;\r\n    const cursorOffset = textPosition?.offset;\r\n\r\n    // Extract text from the cursor position to the end\r\n    const remainingText = fullText.slice(cursorOffset);\r\n\r\n    // Update the DOM: Keep only the text before the cursor\r\n    const newContent = fullText.slice(0, cursorOffset);\r\n    element.textContent = newContent; // Update the element content with remaining text\r\n\r\n    return { remainingText: remainingText, piece: _piece }; // Return the extracted text\r\n  }\r\n\r\n  getCurrentCursorBlock(): string | null {\r\n    const selection = window.getSelection();\r\n    if (!selection || selection.rangeCount === 0) {\r\n      return null; // No selection or cursor position\r\n    }\r\n\r\n    const range = selection.getRangeAt(0); // Get the range of the cursor/selection\r\n    const container = range.startContainer; // The container node of the cursor\r\n\r\n    // Traverse to the parent element with a `data-id` attribute\r\n    const elementWithId = (\r\n      container.nodeType === Node.TEXT_NODE\r\n        ? container.parentElement\r\n        : container\r\n    ) as HTMLElement;\r\n\r\n    const dataIdElement = elementWithId?.closest('[data-id]'); // Find closest ancestor with `data-id`\r\n    return dataIdElement?.getAttribute('data-id') || null; // Return the `data-id` or null if not found\r\n  }\r\n\r\n  addBlockAfter(data: any[], targetDataId: string, newBlock: any): any[] {\r\n    // Find the index of the block with the specified dataId\r\n    const targetIndex = data.findIndex(block => block.dataId === targetDataId);\r\n\r\n    if (targetIndex === -1) {\r\n      console.error(`Block with dataId \"${targetDataId}\" not found.`);\r\n      return data;\r\n    }\r\n\r\n    // Insert the new block after the target index\r\n    const updatedData = [\r\n      ...data.slice(0, targetIndex + 1),\r\n      newBlock,\r\n      ...data.slice(targetIndex + 1),\r\n    ];\r\n\r\n    return updatedData;\r\n  }\r\n  syncCurrentAttributesWithCursor(): void {\r\n    const [start, end] = this.getSelectionRange();\r\n    console.log('log1', { start: start, end: end });\r\n    const blockIndex = this.document.blocks.findIndex(\r\n      (block: any) => block.dataId === this.document.selectedBlockId\r\n    );\r\n    if (this.document.blocks[blockIndex]?.type === 'image') {\r\n      this.imageHandler.addStyleToImage(this.document.selectedBlockId || '');\r\n    } else {\r\n      if (this.imageHandler.isImageHighlighted) {\r\n        this.imageHandler.clearImageStyling();\r\n      }\r\n    }\r\n    if (start === end) {\r\n      const piece = this.document.findPieceAtOffset(\r\n        start,\r\n        this.document.selectedBlockId\r\n      );\r\n      if (piece) {\r\n        if (piece !== this.lastPiece) {\r\n          this.manualOverride = false;\r\n          this.lastPiece = piece;\r\n        }\r\n        if (!this.manualOverride) {\r\n          this.currentAttributes = {\r\n            bold: piece.attributes.bold,\r\n            italic: piece.attributes.italic,\r\n            underline: piece.attributes.underline,\r\n            hyperlink: piece.attributes.hyperlink || false,\r\n            fontFamily: piece.attributes.fontFamily,\r\n            fontSize: piece.attributes.fontSize,\r\n            fontColor: piece.attributes.fontColor,\r\n            bgColor: piece.attributes.bgColor,\r\n          };\r\n          this.toolbarView.updateActiveStates(this.currentAttributes);\r\n        }\r\n        // Show below link..\r\n        const hyperlink = piece?.attributes.hyperlink;\r\n        if (hyperlink && typeof hyperlink === 'string') {\r\n          this.hyperlinkHandler.showHyperlinkViewButton(hyperlink);\r\n        } else {\r\n          this.hyperlinkHandler.hideHyperlinkViewButton();\r\n        }\r\n      } else {\r\n        if (!this.manualOverride) {\r\n          this.currentAttributes = {\r\n            bold: false,\r\n            italic: false,\r\n            underline: false,\r\n            hyperlink: false,\r\n          };\r\n          this.toolbarView.updateActiveStates(this.currentAttributes);\r\n        }\r\n        this.lastPiece = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  setCursorPosition(position: number, dataId: string | null = ''): void {\r\n    if (dataId === '') this.editorView.container.focus();\r\n    else {\r\n      const divDataid = document.querySelector(\r\n        '[data-id=\"' + dataId + '\"]'\r\n      ) as HTMLElement;\r\n      divDataid.focus();\r\n    }\r\n    const sel = window.getSelection();\r\n    if (!sel) return;\r\n    const range = document.createRange();\r\n    let charIndex = 0;\r\n    const nodeStack: Node[] = [this.editorView.container];\r\n    let node: Node | undefined;\r\n\r\n    while ((node = nodeStack.pop())) {\r\n      if (node.nodeType === 3) {\r\n        const textNode = node as Text;\r\n        const nextCharIndex = charIndex + textNode.length;\r\n        if (position >= charIndex && position <= nextCharIndex) {\r\n          range.setStart(textNode, position - charIndex);\r\n          range.collapse(true);\r\n          break;\r\n        }\r\n        charIndex = nextCharIndex;\r\n      } else if ((node as HTMLElement).tagName === 'BR') {\r\n        if (position === charIndex) {\r\n          range.setStartBefore(node);\r\n          range.collapse(true);\r\n          break;\r\n        }\r\n        charIndex++;\r\n      } else {\r\n        const el = node as HTMLElement;\r\n        let i = el.childNodes.length;\r\n        while (i--) {\r\n          nodeStack.push(el.childNodes[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    sel.removeAllRanges();\r\n    sel.addRange(range);\r\n  }\r\n}\r\n(window as any).TextIgniter = TextIgniter;\r\nexport { TextIgniter };\r\n"]}