{"version":3,"file":"cursor.js","sourceRoot":"","sources":["../../src/utils/cursor.ts"],"names":[],"mappings":"AAEA,MAAM,UAAU,iBAAiB,CAAC,UAAqB,EAAC,QAAgB,EAAE,SAAwB,EAAE;IAChG,IAAI,MAAM,KAAK,EAAE;QACb,UAAU,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;SAC5B,CAAC;QACF,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,YAAY,GAAG,MAAM,GAAG,IAAI,CAAgB,CAAA;QACrF,SAAS,CAAC,KAAK,EAAE,CAAC;IAEtB,CAAC;IACD,MAAM,GAAG,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC;IAClC,IAAI,CAAC,GAAG;QAAE,OAAO;IACjB,MAAM,KAAK,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC;IACrC,IAAI,SAAS,GAAG,CAAC,CAAC;IAClB,MAAM,SAAS,GAAW,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;IACjD,IAAI,IAAsB,CAAC;IAE3B,OAAO,CAAC,IAAI,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC;QAC9B,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE,CAAC;YACtB,MAAM,QAAQ,GAAG,IAAY,CAAC;YAC9B,MAAM,aAAa,GAAG,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC;YAClD,IAAI,QAAQ,IAAI,SAAS,IAAI,QAAQ,IAAI,aAAa,EAAE,CAAC;gBACrD,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,QAAQ,GAAG,SAAS,CAAC,CAAC;gBAC/C,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBACrB,MAAM;YACV,CAAC;YACD,SAAS,GAAG,aAAa,CAAC;QAC9B,CAAC;aAAM,IAAK,IAAoB,CAAC,OAAO,KAAK,IAAI,EAAE,CAAC;YAChD,IAAI,QAAQ,KAAK,SAAS,EAAE,CAAC;gBACzB,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;gBAC3B,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBACrB,MAAM;YACV,CAAC;YACD,SAAS,EAAE,CAAC;QAChB,CAAC;aAAM,CAAC;YACJ,MAAM,EAAE,GAAG,IAAmB,CAAC;YAC/B,IAAI,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;YAC7B,OAAO,CAAC,EAAE,EAAE,CAAC;gBACT,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;YACrC,CAAC;QACL,CAAC;IACL,CAAC;IAED,GAAG,CAAC,eAAe,EAAE,CAAC;IACtB,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACxB,CAAC","sourcesContent":["import EditorView from \"../view/editorView\";\r\n\r\nexport function setCursorPosition(editorView:EditorView,position: number, dataId: string | null = ''): void {\r\n    if (dataId === '')\r\n        editorView.container.focus();\r\n    else {\r\n        const divDataid = document.querySelector('[data-id=\"' + dataId + '\"]') as HTMLElement\r\n        divDataid.focus();\r\n\r\n    }\r\n    const sel = window.getSelection();\r\n    if (!sel) return;\r\n    const range = document.createRange();\r\n    let charIndex = 0;\r\n    const nodeStack: Node[] = [editorView.container];\r\n    let node: Node | undefined;\r\n\r\n    while ((node = nodeStack.pop())) {\r\n        if (node.nodeType === 3) {\r\n            const textNode = node as Text;\r\n            const nextCharIndex = charIndex + textNode.length;\r\n            if (position >= charIndex && position <= nextCharIndex) {\r\n                range.setStart(textNode, position - charIndex);\r\n                range.collapse(true);\r\n                break;\r\n            }\r\n            charIndex = nextCharIndex;\r\n        } else if ((node as HTMLElement).tagName === 'BR') {\r\n            if (position === charIndex) {\r\n                range.setStartBefore(node);\r\n                range.collapse(true);\r\n                break;\r\n            }\r\n            charIndex++;\r\n        } else {\r\n            const el = node as HTMLElement;\r\n            let i = el.childNodes.length;\r\n            while (i--) {\r\n                nodeStack.push(el.childNodes[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    sel.removeAllRanges();\r\n    sel.addRange(range);\r\n}"]}