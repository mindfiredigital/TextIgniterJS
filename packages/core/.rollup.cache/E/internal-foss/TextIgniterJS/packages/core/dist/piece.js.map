{"version":3,"file":"piece.js","sourceRoot":"","sources":["../src/piece.ts"],"names":[],"mappings":"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","sourcesContent":["class Piece {\r\n    text: string;\r\n    attributes: {\r\n        bold: boolean; italic: boolean; underline: boolean, undo?: boolean, redo?: boolean, fontFamily?: string;\r\n        fontSize?: string; hyperlink?: string | boolean;\r\n        fontColor?: string; bgColor: string;\r\n    };\r\n    constructor(text: string, attributes: {\r\n        bold?: boolean; italic?: boolean; underline?: boolean; undo?: boolean; redo?: boolean, fontFamily?: string;\r\n        fontSize?: string; hyperlink?: string | boolean;\r\n        fontColor?: string; bgColor?: string;\r\n    } = {}) {\r\n        this.text = text;\r\n        const fontFamilySelect = document.getElementById('fontFamily') as HTMLSelectElement;\r\n        const fontSizeSelect = document.getElementById('fontSize') as HTMLSelectElement;\r\n        let selectedFontFamilyValue = \"Arial\";\r\n        let selectedFontSizeValue = \"16px\";\r\n        let selectedFontColor = document.getElementById('fontColorPicker') as HTMLInputElement;\r\n        let selectedBgColor = document.getElementById('bgColorPicker') as HTMLInputElement\r\n        if (fontFamilySelect) {\r\n            selectedFontFamilyValue = fontFamilySelect.value; // Get the selected value\r\n        }\r\n\r\n        if (fontSizeSelect) {\r\n            selectedFontSizeValue = fontSizeSelect.value; // Get the selected value\r\n        }\r\n\r\n        this.attributes = {\r\n            bold: attributes.bold || false,\r\n            italic: attributes.italic || false,\r\n            underline: attributes.underline || false,\r\n            undo: attributes.undo || false,\r\n            redo: attributes.redo || false,\r\n            fontFamily: attributes.fontFamily || selectedFontFamilyValue, // Default font family\r\n            fontSize: attributes.fontSize || selectedFontSizeValue,     // Default font size\r\n            hyperlink: attributes.hyperlink || false,\r\n            fontColor: attributes.fontColor || selectedFontColor.value,\r\n            bgColor: attributes.bgColor || selectedBgColor.value,\r\n        };\r\n    }\r\n    isBold(): boolean { return this.attributes.bold; }\r\n    setBold(v: boolean): void { this.attributes.bold = v; }\r\n    isItalic(): boolean { return this.attributes.italic; }\r\n    isUndo(): boolean | undefined { return this.attributes.undo; }\r\n    isRedo(): boolean | undefined { return this.attributes.redo; }\r\n\r\n    setItalic(v: boolean): void { this.attributes.italic = v; }\r\n    isUnderline(): boolean { return this.attributes.underline; }\r\n    setUnderline(v: boolean): void { this.attributes.underline = v; }\r\n    setUndo(v: boolean): void { this.attributes.undo = v; }\r\n    setRedo(v: boolean): void { this.attributes.redo = v; }\r\n\r\n    clone(): Piece {\r\n        return new Piece(this.text, { ...this.attributes });\r\n    }\r\n    hasSameAttributes(other: Piece): boolean {\r\n        return this.attributes.bold === other.attributes.bold &&\r\n            this.attributes.italic === other.attributes.italic &&\r\n            this.attributes.underline === other.attributes.underline &&\r\n            this.attributes.undo === other.attributes.undo &&\r\n            this.attributes.redo === other.attributes.redo &&\r\n            this.attributes.fontFamily === other.attributes.fontFamily &&\r\n            this.attributes.fontSize === other.attributes.fontSize &&\r\n            this.attributes.italic === other.attributes.italic &&\r\n            this.attributes.underline === other.attributes.underline &&\r\n            this.attributes.hyperlink === other.attributes.hyperlink &&\r\n            this.attributes.fontColor === other.attributes.fontColor &&\r\n            this.attributes.bgColor === other.attributes.bgColor\r\n    }\r\n    getHyperlink(): string | boolean {\r\n        return this.attributes.hyperlink || false;\r\n    }\r\n    setHyperlink(url: string | boolean): void {\r\n        this.attributes.hyperlink = url;\r\n    }\r\n\r\n    // getFontColor(): string | undefined {\r\n    //     return this.attributes.fontColor\r\n    // }\r\n\r\n    // setFontColor(fontColor: string): void {\r\n    //     this.attributes.fontColor = fontColor\r\n    // }\r\n}\r\n\r\nexport default Piece;"]}