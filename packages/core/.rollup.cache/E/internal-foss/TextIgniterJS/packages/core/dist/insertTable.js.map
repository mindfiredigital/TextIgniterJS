{"version":3,"file":"insertTable.js","sourceRoot":"","sources":["../src/insertTable.ts"],"names":[],"mappings":"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","sourcesContent":["export class InsertTableHandler {\r\n    private editor: HTMLDivElement;\r\n  \r\n    constructor(editor: HTMLDivElement) {\r\n      this.editor = editor;\r\n    }\r\n  \r\n    // Open a modal to let the user specify the table size\r\n    public openTableModal() {\r\n      const modal = document.createElement(\"div\");\r\n      modal.classList.add(\"modal\");\r\n  \r\n      const rowInput = document.createElement(\"input\");\r\n      rowInput.type = \"number\";\r\n      rowInput.placeholder = \"Enter No. Of Rows\";\r\n      rowInput.min = \"1\";\r\n      rowInput.style.marginRight =\"2px\"\r\n      \r\n      const colInput = document.createElement(\"input\");\r\n      colInput.type = \"number\";\r\n      colInput.placeholder = \"Enter No. Of Columns\";\r\n      colInput.min = \"1\";\r\n  \r\n      const insertButton = document.createElement(\"button\");\r\n      insertButton.innerText = \"Insert Table\";\r\n      insertButton.onclick = () => {\r\n        const rows = parseInt(rowInput.value) || 1;\r\n        const cols = parseInt(colInput.value) || 1;\r\n        this.insertTable(rows, cols);\r\n        document.body.removeChild(modal); // Close modal after inserting the table\r\n      };\r\n  \r\n      const closeButton = document.createElement(\"button\");\r\n      closeButton.innerText = \"Close\";\r\n      closeButton.onclick = () => document.body.removeChild(modal);\r\n  \r\n      modal.appendChild(rowInput);\r\n      modal.appendChild(colInput);\r\n      modal.appendChild(insertButton);\r\n      modal.appendChild(closeButton);\r\n      document.body.appendChild(modal);\r\n    }\r\n  \r\n    // Insert table into the editor\r\n    private insertTable(rows: number, cols: number) {\r\n      const table = document.createElement(\"table\");\r\n      table.style.width = \"100%\";\r\n      table.style.borderCollapse = \"collapse\";\r\n  \r\n      for (let r = 0; r < rows; r++) {\r\n        const row = table.insertRow();\r\n        for (let c = 0; c < cols; c++) {\r\n          const cell = row.insertCell();\r\n          cell.style.border = \"1px solid #ccc\";\r\n          cell.style.padding = \"20px\";\r\n          cell.contentEditable = \"true\"; // Make cells editable\r\n          cell.innerText = \" \";\r\n        }\r\n      }\r\n  \r\n      this.editor.appendChild(table);\r\n    }\r\n}  "]}