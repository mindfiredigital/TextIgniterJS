{"version":3,"file":"editorView.js","sourceRoot":"","sources":["../../src/view/editorView.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,aAAa,EAAE,gBAAgB,EAAE,MAAM,2BAA2B,CAAC;AAE5E,MAAM,UAAU;IAKd,YAAY,SAAsB,EAAE,QAAsB;QACxD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAED,eAAe,CAAC,YAA0B;QACxC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACnC,CAAC;IAED,MAAM;QACJ,MAAM,QAAQ,GAAG,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC/C,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,EAAE,CAAC;QAG9B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,KAAU,EAAE,EAAE;YAC1C,IAAI,KAAK,CAAC,MAAM,KAAK,EAAE,EAAE,CAAC;gBACxB,IAAI,UAAuB,CAAC;gBAG5B,IAAI,KAAK,CAAC,IAAI,KAAK,OAAO,EAAE,CAAC;oBAC3B,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;oBAC3C,UAAU,CAAC,YAAY,CAAC,SAAS,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;oBACjD,UAAU,CAAC,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;oBAC9C,UAAU,CAAC,YAAY,CAAC,MAAM,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;oBAC5C,UAAU,CAAC,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,IAAI,MAAM,CAAC;oBACvD,IAAI,KAAK,CAAC,KAAK,EAAE,CAAC;wBAChB,UAAU,CAAC,WAAW,CACpB,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,CACjE,CAAC;oBACJ,CAAC;gBACH,CAAC;qBAAM,CAAC;oBAEN,IAAI,KAAK,CAAC,QAAQ,KAAK,IAAI,IAAI,KAAK,CAAC,QAAQ,KAAK,IAAI,EAAE,CAAC;wBACvD,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;wBAC1C,UAAU,CAAC,YAAY,CAAC,OAAO,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;oBAChE,CAAC;yBAAM,IAAI,KAAK,CAAC,QAAQ,KAAK,IAAI,EAAE,CAAC;wBACnC,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;oBAC5C,CAAC;yBAAM,CAAC;wBACN,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;oBAC7C,CAAC;oBACD,UAAU,CAAC,YAAY,CAAC,SAAS,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;oBACjD,UAAU,CAAC,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;oBAC9C,UAAU,CAAC,YAAY,CAAC,MAAM,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;oBAC5C,UAAU,CAAC,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,IAAI,MAAM,CAAC;oBAEvD,IACE,KAAK,CAAC,QAAQ,KAAK,IAAI;wBACvB,KAAK,CAAC,QAAQ,KAAK,IAAI;wBACvB,KAAK,CAAC,QAAQ,KAAK,IAAI,EACvB,CAAC;wBACD,MAAM,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;wBACxC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,KAAY,EAAE,EAAE;4BACpC,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;wBAC1C,CAAC,CAAC,CAAC;wBACH,UAAU,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;oBAC7B,CAAC;yBAAM,CAAC;wBACN,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,KAAY,EAAE,EAAE;4BACpC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;wBAClD,CAAC,CAAC,CAAC;oBACL,CAAC;gBACH,CAAC;gBACD,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;YACzC,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,gBAAgB,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;IAC7C,CAAC;IAED,WAAW,CAAC,KAAY;QACtB,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACrC,OAAO,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC;IACtD,CAAC;IAED,cAAc,CACZ,KAAe,EACf,KASC;QAED,MAAM,QAAQ,GAAG,QAAQ,CAAC,sBAAsB,EAAE,CAAC;QACnD,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;YAC5B,IAAI,QAAQ,GAAS,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;YACnD,IAAI,KAAK,CAAC,SAAS,EAAE,CAAC;gBACpB,MAAM,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;gBACtC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;gBACxB,QAAQ,GAAG,CAAC,CAAC;YACf,CAAC;YACD,IAAI,KAAK,CAAC,MAAM,EAAE,CAAC;gBACjB,MAAM,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;gBACxC,EAAE,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;gBACzB,QAAQ,GAAG,EAAE,CAAC;YAChB,CAAC;YACD,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC;gBACf,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;gBAChD,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;gBAC7B,QAAQ,GAAG,MAAM,CAAC;YACpB,CAAC;YAID,MAAM,gBAAgB,GAAG,QAAQ,CAAC,cAAc,CAC9C,YAAY,CACQ,CAAC;YACvB,MAAM,cAAc,GAAG,QAAQ,CAAC,cAAc,CAC5C,UAAU,CACU,CAAC;YACvB,IAAI,uBAAuB,GAAG,OAAO,CAAC;YACtC,IAAI,qBAAqB,GAAG,MAAM,CAAC;YAEnC,IAAI,gBAAgB,EAAE,CAAC;gBACrB,uBAAuB,GAAG,gBAAgB,CAAC,KAAK,CAAC;YACnD,CAAC;YAED,IAAI,cAAc,EAAE,CAAC;gBACnB,qBAAqB,GAAG,cAAc,CAAC,KAAK,CAAC;YAC/C,CAAC;YAED,IAAI,KAAK,CAAC,SAAS,IAAI,OAAO,KAAK,CAAC,SAAS,KAAK,QAAQ,EAAE,CAAC;gBAC3D,MAAM,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;gBACtC,CAAC,CAAC,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC;gBACzB,CAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACpB,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;gBACxB,QAAQ,GAAG,CAAC,CAAC;YACf,CAAC;YACD,IAAI,KAAK,CAAC,SAAS,IAAI,OAAO,KAAK,CAAC,SAAS,KAAK,QAAQ,EAAE,CAAC;gBAC3D,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;gBAC5C,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,iBAAiB,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;gBACvD,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC;gBACnC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;gBAC3B,QAAQ,GAAG,IAAI,CAAC;YAClB,CAAC;YAED,IAAI,KAAK,CAAC,OAAO,IAAI,OAAO,KAAK,CAAC,OAAO,KAAK,QAAQ,EAAE,CAAC;gBACvD,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;gBAC5C,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,KAAK,CAAC,OAAO,CAAC;gBAC3C,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;gBAC3B,QAAQ,GAAG,IAAI,CAAC;YAClB,CAAC;YAED,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;YAC5C,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC,UAAU,IAAI,uBAAuB,CAAC;YACpE,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,IAAI,qBAAqB,CAAC;YAE9D,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAE3B,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YAC3B,IAAI,KAAK,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gBAC7B,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;YACrD,CAAC;QACH,CAAC,CAAC,CAAC;QACH,OAAO,QAAQ,CAAC;IAClB,CAAC;CACF;AAED,eAAe,UAAU,CAAC","sourcesContent":["import Piece from '../piece';\r\nimport TextDocument from '../textDocument';\r\nimport { saveSelection, restoreSelection } from '../utils/selectionManager';\r\nimport { ImageHandler } from '../handlers/image';\r\nclass EditorView {\r\n  container: HTMLElement;\r\n  document: TextDocument;\r\n  imageHandler!: ImageHandler;\r\n\r\n  constructor(container: HTMLElement, document: TextDocument) {\r\n    this.container = container;\r\n    this.document = document;\r\n  }\r\n\r\n  setImageHandler(imageHandler: ImageHandler) {\r\n    this.imageHandler = imageHandler;\r\n  }\r\n\r\n  render(): void {\r\n    const savedSel = saveSelection(this.container);\r\n    this.container.innerHTML = '';\r\n    // Create a wrapper div with a unique data-id\r\n\r\n    this.document.blocks.forEach((block: any) => {\r\n      if (block.dataId !== '') {\r\n        let wrapperDiv: HTMLElement;\r\n\r\n        // If block is an image, ignore list handling.\r\n        if (block.type === 'image') {\r\n          wrapperDiv = document.createElement('div');\r\n          wrapperDiv.setAttribute('data-id', block.dataId);\r\n          wrapperDiv.setAttribute('class', block.class);\r\n          wrapperDiv.setAttribute('type', block.type);\r\n          wrapperDiv.style.textAlign = block.alignment || 'left';\r\n          if (block.image) {\r\n            wrapperDiv.appendChild(\r\n              this.imageHandler.createImageFragment(block.image, block.dataId)\r\n            );\r\n          }\r\n        } else {\r\n          // For text blocks, use list wrappers if needed.\r\n          if (block.listType === 'ol' || block.listType === 'li') {\r\n            wrapperDiv = document.createElement('ol');\r\n            wrapperDiv.setAttribute('start', block?.listStart.toString());\r\n          } else if (block.listType === 'ul') {\r\n            wrapperDiv = document.createElement('ul');\r\n          } else {\r\n            wrapperDiv = document.createElement('div');\r\n          }\r\n          wrapperDiv.setAttribute('data-id', block.dataId);\r\n          wrapperDiv.setAttribute('class', block.class);\r\n          wrapperDiv.setAttribute('type', block.type);\r\n          wrapperDiv.style.textAlign = block.alignment || 'left';\r\n\r\n          if (\r\n            block.listType === 'ol' ||\r\n            block.listType === 'ul' ||\r\n            block.listType === 'li'\r\n          ) {\r\n            const li = document.createElement('li');\r\n            block.pieces.forEach((piece: Piece) => {\r\n              li.appendChild(this.renderPiece(piece));\r\n            });\r\n            wrapperDiv.appendChild(li);\r\n          } else {\r\n            block.pieces.forEach((piece: Piece) => {\r\n              wrapperDiv.appendChild(this.renderPiece(piece));\r\n            });\r\n          }\r\n        }\r\n        this.container.appendChild(wrapperDiv);\r\n      }\r\n    });\r\n\r\n    restoreSelection(this.container, savedSel);\r\n  }\r\n\r\n  renderPiece(piece: Piece): DocumentFragment {\r\n    const lines = piece.text.split('\\n');\r\n    return this.wrapAttributes(lines, piece.attributes);\r\n  }\r\n\r\n  wrapAttributes(\r\n    lines: string[],\r\n    attrs: {\r\n      bold: boolean;\r\n      italic: boolean;\r\n      underline: boolean;\r\n      fontFamily?: string;\r\n      fontSize?: string;\r\n      hyperlink?: string | boolean;\r\n      fontColor?: string;\r\n      bgColor?: string;\r\n    }\r\n  ): DocumentFragment {\r\n    const fragment = document.createDocumentFragment();\r\n    lines.forEach((line, index) => {\r\n      let textNode: Node = document.createTextNode(line);\r\n      if (attrs.underline) {\r\n        const u = document.createElement('u');\r\n        u.appendChild(textNode);\r\n        textNode = u;\r\n      }\r\n      if (attrs.italic) {\r\n        const em = document.createElement('em');\r\n        em.appendChild(textNode);\r\n        textNode = em;\r\n      }\r\n      if (attrs.bold) {\r\n        const strong = document.createElement('strong');\r\n        strong.appendChild(textNode);\r\n        textNode = strong;\r\n      }\r\n\r\n      // Wrap with a span to apply font family and size\r\n\r\n      const fontFamilySelect = document.getElementById(\r\n        'fontFamily'\r\n      ) as HTMLSelectElement;\r\n      const fontSizeSelect = document.getElementById(\r\n        'fontSize'\r\n      ) as HTMLSelectElement;\r\n      let selectedFontFamilyValue = 'Arial';\r\n      let selectedFontSizeValue = '16px';\r\n\r\n      if (fontFamilySelect) {\r\n        selectedFontFamilyValue = fontFamilySelect.value; // Get the selected value\r\n      }\r\n\r\n      if (fontSizeSelect) {\r\n        selectedFontSizeValue = fontSizeSelect.value; // Get the selected value\r\n      }\r\n\r\n      if (attrs.hyperlink && typeof attrs.hyperlink === 'string') {\r\n        const a = document.createElement('a');\r\n        a.href = attrs.hyperlink;\r\n        a.target = '_blank'; //For new tab\r\n        a.appendChild(textNode);\r\n        textNode = a;\r\n      }\r\n      if (attrs.fontColor && typeof attrs.fontColor === 'string') {\r\n        const span = document.createElement('span');\r\n        console.log(lines, 'attrs.fontColor', attrs.fontColor);\r\n        span.style.color = attrs.fontColor;\r\n        span.appendChild(textNode);\r\n        textNode = span;\r\n      }\r\n\r\n      if (attrs.bgColor && typeof attrs.bgColor === 'string') {\r\n        const span = document.createElement('span');\r\n        span.style.backgroundColor = attrs.bgColor;\r\n        span.appendChild(textNode);\r\n        textNode = span;\r\n      }\r\n\r\n      const span = document.createElement('span');\r\n      span.style.fontFamily = attrs.fontFamily || selectedFontFamilyValue;\r\n      span.style.fontSize = attrs.fontSize || selectedFontSizeValue;\r\n      // span.style.color = attrs.fontColor || selectedFontColor;\r\n      span.appendChild(textNode);\r\n\r\n      fragment.appendChild(span);\r\n      if (index < lines.length - 1) {\r\n        fragment.appendChild(document.createElement('br'));\r\n      }\r\n    });\r\n    return fragment;\r\n  }\r\n}\r\n\r\nexport default EditorView;\r\n"]}