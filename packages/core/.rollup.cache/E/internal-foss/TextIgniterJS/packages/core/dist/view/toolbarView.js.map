{"version":3,"file":"toolbarView.js","sourceRoot":"","sources":["../../src/view/toolbarView.ts"],"names":[],"mappings":"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","sourcesContent":["import { CurrentAttributeDTO } from \"../TextIgniter\";\r\nimport EventEmitter from \"../utils/events\";\r\n\r\nclass ToolbarView extends EventEmitter {\r\n    container: HTMLElement;\r\n    constructor(container: HTMLElement) {\r\n        super();\r\n        this.container = container;\r\n        this.setupButtons();\r\n    }\r\n\r\n    setupButtons(): void {\r\n        this.container.querySelectorAll('button').forEach(button => {\r\n            button.addEventListener('mousedown', (e) => {\r\n                e.preventDefault();\r\n            });\r\n        });\r\n\r\n        this.container.addEventListener('click', (e) => {\r\n            const target = e.target as HTMLElement;\r\n            const btn = target.closest('button');\r\n            if (btn) {\r\n                const action = btn.getAttribute('data-action');\r\n                if (action) {\r\n                    this.emit('toolbarAction', action);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    updateActiveStates(attributes: CurrentAttributeDTO): void {\r\n        this.container.querySelectorAll('button').forEach(btn => {\r\n            const action = btn.getAttribute('data-action');\r\n        \r\n            let isActive = false;\r\n            if (action === 'bold' && attributes.bold) isActive = true;\r\n            if (action === 'italic' && attributes.italic) isActive = true;\r\n            if (action === 'underline' && attributes.underline) isActive = true;\r\n            if (action === 'hyperlink' && attributes.hyperlink) isActive = true;\r\n            if (action === 'undo' && attributes.undo) isActive = true;\r\n            if (action === 'redo' && attributes.redo) isActive = true;\r\n            btn.classList.toggle('active', isActive);\r\n        });\r\n        this.container.querySelectorAll('select').forEach(select => {\r\n            const action = select.getAttribute('data-action');\r\n            if(action === 'fontFamily' && attributes.fontFamily) select.value = attributes.fontFamily;\r\n            if(action === 'fontSize' && attributes.fontSize) select.value = attributes.fontSize;\r\n        });\r\n\r\n        if (attributes.fontColor){\r\n            const fontColorPicker = document.getElementById('fontColorPicker') as HTMLInputElement;\r\n            if (fontColorPicker) {\r\n                fontColorPicker.value = attributes.fontColor;\r\n                fontColorPicker.dispatchEvent(new Event('input', { bubbles: true }));\r\n            } \r\n        }\r\n        \r\n        if (attributes.bgColor){\r\n            const fontColorPicker = document.getElementById('bgColorPicker') as HTMLInputElement;\r\n            if (fontColorPicker) {\r\n                fontColorPicker.value = attributes.bgColor;\r\n                fontColorPicker.dispatchEvent(new Event('input', { bubbles: true }));\r\n            } \r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default ToolbarView;"]}